#!/bin/bash 
# ********************************************************************
# Ericsson Radio Systems AB                                     SCRIPT
# ********************************************************************
#
#
# (c) Ericsson Radio Systems AB 2012 - All rights reserved.
#
# The copyright to the computer program(s) herein is the property
# of Ericsson Radio Systems AB, Sweden. The programs may be used 
# and/or copied only with the written permission from Ericsson Radio 
# Systems AB or in accordance with the terms and conditions stipulated 
# in the agreement/contract under which the program(s) have been 
# supplied.
#
# ********************************************************************
# Name    :
# Date    : 
# Revision: 
# Purpose : 
#			
# Usage   : 
#
# ********************************************************************
#
# 	Command Section
#
# ********************************************************************
#

AWK=/usr/bin/awk
BASENAME=/usr/bin/basename
CAT=/usr/bin/cat
CHMOD=/usr/bin/chmod
CHOWN=/usr/bin/chown
CP=/usr/bin/cp
DATE=/usr/bin/date
DIRNAME=/usr/bin/dirname
ECHO=/usr/bin/echo
EGREP=/usr/bin/egrep
EXPR=/usr/bin/expr
FIND=/usr/bin/find
GETENT=/usr/bin/getent
GEGREP=/usr/sfw/bin/gegrep
GREP=/usr/bin/grep
GTAR=/usr/sfw/bin/gtar
GZCAT=/usr/bin/gzcat
GZIP=/usr/bin/gzip
HEAD=/usr/bin/head
MYHOSTNAME=/usr/bin/hostname
ID=/usr/bin/id
INIT=/usr/sbin/init
LN=/usr/bin/ln
LS=/usr/bin/ls
MKDIR=/usr/bin/mkdir
MOUNT=/usr/sbin/mount
MV=/usr/bin/mv
NAWK=/usr/bin/nawk
PGREP=/usr/bin/pgrep
PWD=/usr/bin/pwd
REBOOT=/usr/sbin/reboot
RM=/usr/bin/rm
SED=/usr/bin/sed
SLEEP=/usr/bin/sleep
SORT=/usr/bin/sort
SU=/usr/bin/su
SSH=/usr/bin/ssh
SVCADM=/usr/sbin/svcadm
SVCCFG=/usr/sbin/svccfg
SVCS=/usr/bin/svcs
TAIL=/usr/bin/tail
TAR=/usr/sbin/tar
TEE=/usr/bin/tee
TOUCH=/usr/bin/touch
WC=/usr/bin/wc
MKFIFO=/usr/bin/mkfifo
### Function: abort_script ###
#
#  abort function
#
# Arguments:
#       none
# Return Values:
#       none
abort_script()
{
if [ "$1" ]; then
    _err_msg_=$1
else
    _err_msg_="Script aborted.......\n"    
fi

echo "$_err_msg_"  

exit 1
}

### Function: usage_msg ###
#
#   Print out the usage message
#
# Arguments:
#       none
# Return Values:
#       none
usage_msg()
{
$CLEAR
$ECHO "
Usage: `$BASENAME $0` -c|-r pipe_name

options:
        -c pipe_name	: create pipe with name

        -r  pipe_name	: close pipe with name
	
"
}





# ********************************************************************
#
# 	Main body of program
#
# ********************************************************************
#
ENIQ_BASE_DIR=/eniq
TIMESTAMP=`$DATE +%d.%m.%y_%H:%M:%S`

while getopts "c:r:" arg; do
  case $arg in
   c) pipe_name="$OPTARG"
        create_pipe="yes"
       ;;
    r) pipe_name="$OPTARG"
        remove_pipe="yes"
       ;;
   \?) usage_msg 
         _err_msg_="Invalid option used or no option used."
        abort_script "${_err_msg_}"
       	;;
       
  esac
done



# Source the common functions
if [ -s ${ENIQ_BASE_DIR}/admin/lib/common_functions.lib ]; then
    . ${ENIQ_BASE_DIR}/admin/lib/common_functions.lib
else
    _err_msg_="File ${ENIQ_BASE_DIR}/admin/lib/common_functions.lib not found"
    abort_script "$_err_msg_"
fi




if [ "$create_pipe" == "yes" ]
then
        if [ -p "${pipe_name}" ]
		then
			$ECHO "${pipe_name} is already created"
		else
			$MKFIFO ${pipe_name}
		fi
elif [ "$remove_pipe" == "yes" ]
then
 if [ -p "${pipe_name}" ]
		then
			$RM -f $pipe_name
		else
			$ECHO "${pipe_name} does not exist"
		fi
		
else
        usage_msg 
        _err_msg_="Invalid option used or no option used."
        abort_script "${_err_msg_}"
fi







